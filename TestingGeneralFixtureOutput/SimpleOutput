 
button clicked


ProjectDir: C:\Users\noshi\Documents\Comic Life\TestSet

/ExtenderErExtenderTest.java

File Path (BuildCompilationUnit) : C:\Users\noshi\Documents\Comic Life\TestSet\ExtenderErExtenderTest.java

Iteration no: 1
Method gular list :@Before
public void setUp() throws Exception {
    ll = "smell";
}

parent LastExtendertest

LastExtendertest
Visitor er filepath: C:\Users\noshi\Documents\Comic Life\TestSet\LastExtendertest.java

Iteration no: 2
Method gular list :@Before
public void setUp() throws Exception {
    okaaaaa = "smell";
}

Setup method er list @Before
public void setUp() throws Exception {
    ll = "smell";
}

Setup method er list @Before
public void setUp() throws Exception {
    okaaaaa = "smell";
}

body dekhi:
 Optional[{
    ll = "smell";
}]

Setup e ekhn ache : ll

body dekhi:
 Optional[{
    okaaaaa = "smell";
}]

Setup e ekhn ache : okaaaaa

Number of test methods in the class : 0
Ended Class * ExtenderErExtenderTest
/LastExtendertest.java

File Path (BuildCompilationUnit) : C:\Users\noshi\Documents\Comic Life\TestSet\LastExtendertest.java

Iteration no: 1
Method gular list :@Before
public void setUp() throws Exception {
    okaaaaa = "smell";
}

Setup method er list @Before
public void setUp() throws Exception {
    okaaaaa = "smell";
}

body dekhi:
 Optional[{
    okaaaaa = "smell";
}]

Setup e ekhn ache : okaaaaa

Number of test methods in the class : 0
Ended Class * LastExtendertest
/PersonSmellTest.java

File Path (BuildCompilationUnit) : C:\Users\noshi\Documents\Comic Life\TestSet\PersonSmellTest.java

Iteration no: 1
Method gular list :@Before
public void setUp() throws Exception {
    System.out.println("Smelly Class");
    a = new PersonUtility().getAllPerson("C://data//person.txt");
    b = new PersonController();
    x = "smell";
}
Method gular list :@Test
public void testAdd() {
    b.add(new DummyPerson());
    List<Person> newPersonList = new PersonUtility().getAllPerson("C://data//person.txt");
    personList = new PersonUtility().getAllPerson("C://data//person.txt");
    personController = new PersonController();
    assertEquals(a.size() + 1, newPersonList.size());
}
Method gular list :@Test
public void testDelete() {
    a = new PersonUtility().getAllPerson("C://data//person.txt");
    List<Person> newPersonList = new PersonUtility().getAllPerson("C://data//person.txt");
    x = x.reverse();
    personList = new PersonUtility().getAllPerson("C://data//person.txt");
    personController = new PersonController();
    cntlString = cntlString.reverse();
}
Method gular list :@Test
public void testAddAgain() {
    b.add(new DummyPerson());
    List<Person> newPersonList = new PersonUtility().getAllPerson("C://data//person.txt");
    x = x + 1;
    System.out.print("test ");
    assertEquals(a.size() + 1, newPersonList.size());
}

List of Test Methods for the class :

@Test
public void testAdd() {
    b.add(new DummyPerson());
    List<Person> newPersonList = new PersonUtility().getAllPerson("C://data//person.txt");
    personList = new PersonUtility().getAllPerson("C://data//person.txt");
    personController = new PersonController();
    assertEquals(a.size() + 1, newPersonList.size());
}

List of Test Methods for the class :

@Test
public void testDelete() {
    a = new PersonUtility().getAllPerson("C://data//person.txt");
    List<Person> newPersonList = new PersonUtility().getAllPerson("C://data//person.txt");
    x = x.reverse();
    personList = new PersonUtility().getAllPerson("C://data//person.txt");
    personController = new PersonController();
    cntlString = cntlString.reverse();
}

List of Test Methods for the class :

@Test
public void testAddAgain() {
    b.add(new DummyPerson());
    List<Person> newPersonList = new PersonUtility().getAllPerson("C://data//person.txt");
    x = x + 1;
    System.out.print("test ");
    assertEquals(a.size() + 1, newPersonList.size());
}

parent testPersonSmellExtender

testPersonSmellExtender
Visitor er filepath: C:\Users\noshi\Documents\Comic Life\TestSet\testPersonSmellExtender.java

Iteration no: 2
Method gular list :@Before
public void setUp() throws Exception {
    System.out.println("Smelly Class");
    a = new PersonUtility().getAllPerson("C://data//person.txt");
    b = new PersonController();
    c = "smell";
}

List of Test Methods for the class :

@Test
public void testAdd() {
    b.add(new DummyPerson());
    List<Person> newPersonList = new PersonUtility().getAllPerson("C://data//person.txt");
    personList = new PersonUtility().getAllPerson("C://data//person.txt");
    personController = new PersonController();
    assertEquals(a.size() + 1, newPersonList.size());
}

List of Test Methods for the class :

@Test
public void testDelete() {
    a = new PersonUtility().getAllPerson("C://data//person.txt");
    List<Person> newPersonList = new PersonUtility().getAllPerson("C://data//person.txt");
    x = x.reverse();
    personList = new PersonUtility().getAllPerson("C://data//person.txt");
    personController = new PersonController();
    cntlString = cntlString.reverse();
}

List of Test Methods for the class :

@Test
public void testAddAgain() {
    b.add(new DummyPerson());
    List<Person> newPersonList = new PersonUtility().getAllPerson("C://data//person.txt");
    x = x + 1;
    System.out.print("test ");
    assertEquals(a.size() + 1, newPersonList.size());
}

parent ExtenderErExtenderTest

ExtenderErExtenderTest
Visitor er filepath: C:\Users\noshi\Documents\Comic Life\TestSet\ExtenderErExtenderTest.java

Iteration no: 3
Method gular list :@Before
public void setUp() throws Exception {
    ll = "smell";
}

List of Test Methods for the class :

@Test
public void testAdd() {
    b.add(new DummyPerson());
    List<Person> newPersonList = new PersonUtility().getAllPerson("C://data//person.txt");
    personList = new PersonUtility().getAllPerson("C://data//person.txt");
    personController = new PersonController();
    assertEquals(a.size() + 1, newPersonList.size());
}

List of Test Methods for the class :

@Test
public void testDelete() {
    a = new PersonUtility().getAllPerson("C://data//person.txt");
    List<Person> newPersonList = new PersonUtility().getAllPerson("C://data//person.txt");
    x = x.reverse();
    personList = new PersonUtility().getAllPerson("C://data//person.txt");
    personController = new PersonController();
    cntlString = cntlString.reverse();
}

List of Test Methods for the class :

@Test
public void testAddAgain() {
    b.add(new DummyPerson());
    List<Person> newPersonList = new PersonUtility().getAllPerson("C://data//person.txt");
    x = x + 1;
    System.out.print("test ");
    assertEquals(a.size() + 1, newPersonList.size());
}

parent LastExtendertest

LastExtendertest
Visitor er filepath: C:\Users\noshi\Documents\Comic Life\TestSet\LastExtendertest.java

Iteration no: 4
Method gular list :@Before
public void setUp() throws Exception {
    okaaaaa = "smell";
}

List of Test Methods for the class :

@Test
public void testAdd() {
    b.add(new DummyPerson());
    List<Person> newPersonList = new PersonUtility().getAllPerson("C://data//person.txt");
    personList = new PersonUtility().getAllPerson("C://data//person.txt");
    personController = new PersonController();
    assertEquals(a.size() + 1, newPersonList.size());
}

List of Test Methods for the class :

@Test
public void testDelete() {
    a = new PersonUtility().getAllPerson("C://data//person.txt");
    List<Person> newPersonList = new PersonUtility().getAllPerson("C://data//person.txt");
    x = x.reverse();
    personList = new PersonUtility().getAllPerson("C://data//person.txt");
    personController = new PersonController();
    cntlString = cntlString.reverse();
}

List of Test Methods for the class :

@Test
public void testAddAgain() {
    b.add(new DummyPerson());
    List<Person> newPersonList = new PersonUtility().getAllPerson("C://data//person.txt");
    x = x + 1;
    System.out.print("test ");
    assertEquals(a.size() + 1, newPersonList.size());
}

Setup method er list @Before
public void setUp() throws Exception {
    System.out.println("Smelly Class");
    a = new PersonUtility().getAllPerson("C://data//person.txt");
    b = new PersonController();
    x = "smell";
}

Setup method er list @Before
public void setUp() throws Exception {
    System.out.println("Smelly Class");
    a = new PersonUtility().getAllPerson("C://data//person.txt");
    b = new PersonController();
    c = "smell";
}

Setup method er list @Before
public void setUp() throws Exception {
    ll = "smell";
}

Setup method er list @Before
public void setUp() throws Exception {
    okaaaaa = "smell";
}

body dekhi:
 Optional[{
    System.out.println("Smelly Class");
    a = new PersonUtility().getAllPerson("C://data//person.txt");
    b = new PersonController();
    x = "smell";
}]

Setup e ekhn ache : a

Setup e ekhn ache : b

Setup e ekhn ache : x

body dekhi:
 Optional[{
    System.out.println("Smelly Class");
    a = new PersonUtility().getAllPerson("C://data//person.txt");
    b = new PersonController();
    c = "smell";
}]

Setup e ekhn ache : c

body dekhi:
 Optional[{
    ll = "smell";
}]

Setup e ekhn ache : ll

body dekhi:
 Optional[{
    okaaaaa = "smell";
}]

Setup e ekhn ache : okaaaaa

Number of test methods in the class : 3

Result String :
Method testAdd() has smell for variable x from line no 15 to 23





Result String :
Method testAdd() has smell for variable c from line no 15 to 23





Result String :
Method testAdd() has smell for variable ll from line no 15 to 23





Result String :
Method testAdd() has smell for variable okaaaaa from line no 15 to 23





Result String :
Method testDelete() has smell for variable b from line no 25 to 34





Result String :
Method testDelete() has smell for variable c from line no 25 to 34





Result String :
Method testDelete() has smell for variable ll from line no 25 to 34





Result String :
Method testDelete() has smell for variable okaaaaa from line no 25 to 34





Result String :
Method testAddAgain() has smell for variable c from line no 36 to 43





Result String :
Method testAddAgain() has smell for variable ll from line no 36 to 43





Result String :
Method testAddAgain() has smell for variable okaaaaa from line no 36 to 43




Ended Class * PersonSmellTest
/TestNoSetup.java

File Path (BuildCompilationUnit) : C:\Users\noshi\Documents\Comic Life\TestSet\TestNoSetup.java

Iteration no: 1
Method gular list :@Test
public void testAdd() {
    b.add(new DummyPerson());
    List<Person> newPersonList = new PersonUtility().getAllPerson("C://data//person.txt");
    personList = new PersonUtility().getAllPerson("C://data//person.txt");
    personController = new PersonController();
    assertEquals(a.size() + 1, newPersonList.size());
}
Method gular list :@Test
public void testDelete() {
    a = new PersonUtility().getAllPerson("C://data//person.txt");
    List<Person> newPersonList = new PersonUtility().getAllPerson("C://data//person.txt");
    x = x.reverse();
    personList = new PersonUtility().getAllPerson("C://data//person.txt");
    personController = new PersonController();
    cntlString = cntlString.reverse();
}
Method gular list :@Test
public void testAddAgain() {
    b.add(new DummyPerson());
    List<Person> newPersonList = new PersonUtility().getAllPerson("C://data//person.txt");
    x = x + 1;
    System.out.print("test ");
    assertEquals(a.size() + 1, newPersonList.size());
}

List of Test Methods for the class :

@Test
public void testAdd() {
    b.add(new DummyPerson());
    List<Person> newPersonList = new PersonUtility().getAllPerson("C://data//person.txt");
    personList = new PersonUtility().getAllPerson("C://data//person.txt");
    personController = new PersonController();
    assertEquals(a.size() + 1, newPersonList.size());
}

List of Test Methods for the class :

@Test
public void testDelete() {
    a = new PersonUtility().getAllPerson("C://data//person.txt");
    List<Person> newPersonList = new PersonUtility().getAllPerson("C://data//person.txt");
    x = x.reverse();
    personList = new PersonUtility().getAllPerson("C://data//person.txt");
    personController = new PersonController();
    cntlString = cntlString.reverse();
}

List of Test Methods for the class :

@Test
public void testAddAgain() {
    b.add(new DummyPerson());
    List<Person> newPersonList = new PersonUtility().getAllPerson("C://data//person.txt");
    x = x + 1;
    System.out.print("test ");
    assertEquals(a.size() + 1, newPersonList.size());
}

Setup method nai re vai

Number of test methods in the class : 3
Ended Class * TestNoSetup
/testPersonSmellExtender.java

File Path (BuildCompilationUnit) : C:\Users\noshi\Documents\Comic Life\TestSet\testPersonSmellExtender.java

Iteration no: 1
Method gular list :@Before
public void setUp() throws Exception {
    System.out.println("Smelly Class");
    a = new PersonUtility().getAllPerson("C://data//person.txt");
    b = new PersonController();
    c = "smell";
}

parent ExtenderErExtenderTest

ExtenderErExtenderTest
Visitor er filepath: C:\Users\noshi\Documents\Comic Life\TestSet\ExtenderErExtenderTest.java

Iteration no: 2
Method gular list :@Before
public void setUp() throws Exception {
    ll = "smell";
}

parent LastExtendertest

LastExtendertest
Visitor er filepath: C:\Users\noshi\Documents\Comic Life\TestSet\LastExtendertest.java

Iteration no: 3
Method gular list :@Before
public void setUp() throws Exception {
    okaaaaa = "smell";
}

Setup method er list @Before
public void setUp() throws Exception {
    System.out.println("Smelly Class");
    a = new PersonUtility().getAllPerson("C://data//person.txt");
    b = new PersonController();
    c = "smell";
}

Setup method er list @Before
public void setUp() throws Exception {
    ll = "smell";
}

Setup method er list @Before
public void setUp() throws Exception {
    okaaaaa = "smell";
}

body dekhi:
 Optional[{
    System.out.println("Smelly Class");
    a = new PersonUtility().getAllPerson("C://data//person.txt");
    b = new PersonController();
    c = "smell";
}]

Setup e ekhn ache : a

Setup e ekhn ache : b

Setup e ekhn ache : c

body dekhi:
 Optional[{
    ll = "smell";
}]

Setup e ekhn ache : ll

body dekhi:
 Optional[{
    okaaaaa = "smell";
}]

Setup e ekhn ache : okaaaaa

Number of test methods in the class : 0
Ended Class * testPersonSmellExtender
